image: node:22-alpine

stages:
  - install
  - test
  - build
  - release

variables:
  NODE_OPTIONS: "--max-old-space-size=4096"  # 4GB RAM limit

cache:
  key: ${CI_COMMIT_REF_SLUG}
  policy: pull
  paths: [ .npm ]

install:
  stage: install
  script:
    - npm ci --prefer-offline --cache .npm --no-audit --progress=false
  artifacts:
    paths: [ node_modules ]
    expire_in: 1 day
  cache:
    policy: pull-push

test_unit:
  stage: test
  script:
    - npm run test:unit
  coverage: /All files[^|]*|[^|]*\s+([\d\.]+)/
  artifacts:
    paths: [ coverage ]
    expire_in: 1 day
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
      junit:
        - junit.xml  

test_codestyles:
  stage: test
  script:
    - npm run test:codestyles

test_build:
  stage: test
  script:
    - npm run build

test_type:
  stage: test
  script:
    - npm run test:type

test_vulnerabilities:
  stage: test
  script:
    - npm audit
    

build:
  stage: build
  script:
    - npm run build
  artifacts:
    paths: [ dist ]
    expire_in: 1 day 

release:
  image: node:22
  stage: release
  dependencies: [ install, build ]
  script:
    - npx semantic-release
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

